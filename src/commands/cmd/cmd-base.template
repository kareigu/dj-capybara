use crate::commands::{Command, text_response};
use serenity::async_trait;
use serenity::client::Context;
use serenity::builder::{CreateApplicationCommand, CreateInteractionResponseData};
use serenity::model::application::interaction::application_command::ApplicationCommandInteraction;
use tracing::{info, error};
use serenity::Error;

pub struct Cmd;

#[async_trait]
impl Command for Cmd {

  async fn execute(ctx: &Context, command: ApplicationCommandInteraction) -> Result<(), Error> {

  }

  fn info(command: &mut CreateApplicationCommand) -> &mut CreateApplicationCommand {

  }

}